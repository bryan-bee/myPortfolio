{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bryan\\\\Documents\\\\Projects\\\\myPortfolio\\\\src\\\\Pages\\\\Projects\\\\Projects.js\";\nimport './Projects.sass';\nimport SectionHeading from '../../Components/SectionHeading/SectionHeading.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ShowProjects() {\n  const projects = [{\n    name: 'Housing Price Predicter Model',\n    description: 'October 2023- In Progress',\n    technologies: 'Python, TensorFlow, PyTorch, Pandas, Scikit-Learn',\n    content: ['● Trained various machine learning and deep learning models, including SVM, ANN, and CNN, to predict human emotions from grayscale images, achieving accurate emotion classification through image analysis.', '● Preprocessed a dataset of 37,000+ human emotion images taken from Kaggle, utilized Pandas, Keras, and NumPy to optimize them as training data for machine learning models, achieving an average prediction accuracy of 60%.']\n  }, {\n    name: 'Spotify Wrapped',\n    description: 'June 2023 - In Progress',\n    technologies: 'REST API, Python, Flask, JSON, OAuth, React.js',\n    content: ['● Creating a web application emulating Spotify\\'s \\'Spotify Wrapped\\' feature, providing users with personalized Spotify metrics based on their music preferences and listening habits', '● Enables users to access their custom Spotify metrics at any time, offering a unique and engaging experience.']\n  }, {\n    name: 'Metrics Automation',\n    description: 'June 2023- August 2023',\n    technologies: 'REST API, Git, Python, NumPy, Pandas',\n    content: ['● Collaborated with stakeholders, product owners, and my team of engineers to automate metric generation in Python, which resulted in a 90% reduction in manual workload for metrics collection across all projects and teams.', '●  Spearheaded the development of our backend data pipeline by designing, implementing, and testing the code base, which provided half the metrics for our automation platform.']\n  }, {\n    name: 'ChatGPT-Powered Monkey Bot',\n    description: 'December 2022 - August 2023',\n    technologies: 'REST API, Python',\n    content: ['● Crafted a fun and interactive Discord bot to help moderate and entertain server members.', '● The bot helped to actively monitor server chats, apply temporary chat and voice chat restrictions to rule violators, and used API calls to provide entertaining ChatGPT-powered responses']\n  }, {\n    name: 'Hospital management system',\n    description: 'January 2023 – May 2023',\n    technologies: 'Java, HTML, CSS, Bootstrap, MySQL',\n    link: 'https://github.com/bryan-bee/Hospital-Management',\n    content: ['● Engineered a web application designed to provide hospitals with an intuitive interface for viewing and editing patient and vaccine information.', '● The service offered user-friendly patient and vaccine data management for healthcare providers']\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"projects_items\",\n    children: projects.map(i => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"projects_items_card\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: i.link,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        className: \"projects_items_card_link fs2\",\n        style: {\n          fontWeight: 'bold'\n        },\n        children: i.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"projects_items_card_description fs1\",\n        children: i.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"projects_items_card_technologies fs1\",\n        children: i.technologies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), i.content.map(j => /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"projects_items_card_maintext fs1\",\n          children: j\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_c = ShowProjects;\nfunction Projects() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"projects_main\",\n    id: \"projects\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"projects\",\n      children: [/*#__PURE__*/_jsxDEV(SectionHeading, {\n        text: \"Technical Projects\",\n        color: \"white\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ShowProjects, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_c2 = Projects;\nexport default Projects;\nvar _c, _c2;\n$RefreshReg$(_c, \"ShowProjects\");\n$RefreshReg$(_c2, \"Projects\");","map":{"version":3,"names":["SectionHeading","jsxDEV","_jsxDEV","ShowProjects","projects","name","description","technologies","content","link","className","children","map","i","href","target","rel","style","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","j","_c","Projects","id","text","color","_c2","$RefreshReg$"],"sources":["C:/Users/Bryan/Documents/Projects/myPortfolio/src/Pages/Projects/Projects.js"],"sourcesContent":["import './Projects.sass';\r\nimport SectionHeading from '../../Components/SectionHeading/SectionHeading.js';\r\n\r\n\r\nfunction ShowProjects() {\r\n  const projects = [\r\n    {\r\n      name:'Housing Price Predicter Model',\r\n      description:'October 2023- In Progress',\r\n      technologies:'Python, TensorFlow, PyTorch, Pandas, Scikit-Learn',\r\n      content:[\r\n        '● Trained various machine learning and deep learning models, including SVM, ANN, and CNN, to predict human emotions from grayscale images, achieving accurate emotion classification through image analysis.',\r\n        '● Preprocessed a dataset of 37,000+ human emotion images taken from Kaggle, utilized Pandas, Keras, and NumPy to optimize them as training data for machine learning models, achieving an average prediction accuracy of 60%.'\r\n      ],\r\n    },\r\n    {\r\n      name: 'Spotify Wrapped',\r\n      description:'June 2023 - In Progress',\r\n      technologies:'REST API, Python, Flask, JSON, OAuth, React.js',\r\n      content:[\r\n        '● Creating a web application emulating Spotify\\'s \\'Spotify Wrapped\\' feature, providing users with personalized Spotify metrics based on their music preferences and listening habits',\r\n        '● Enables users to access their custom Spotify metrics at any time, offering a unique and engaging experience.'\r\n      ],\r\n    },\r\n    {\r\n      name:'Metrics Automation',\r\n      description:'June 2023- August 2023',\r\n      technologies:'REST API, Git, Python, NumPy, Pandas',\r\n      content:[\r\n        '● Collaborated with stakeholders, product owners, and my team of engineers to automate metric generation in Python, which resulted in a 90% reduction in manual workload for metrics collection across all projects and teams.',\r\n        '●  Spearheaded the development of our backend data pipeline by designing, implementing, and testing the code base, which provided half the metrics for our automation platform.'\r\n      ],\r\n    },\r\n    {\r\n      name: 'ChatGPT-Powered Monkey Bot',\r\n      description:'December 2022 - August 2023',\r\n      technologies:'REST API, Python',\r\n      content:[\r\n        '● Crafted a fun and interactive Discord bot to help moderate and entertain server members.',\r\n        '● The bot helped to actively monitor server chats, apply temporary chat and voice chat restrictions to rule violators, and used API calls to provide entertaining ChatGPT-powered responses'\r\n      ],\r\n    },\r\n    \r\n    {\r\n      name:'Hospital management system',\r\n      description:'January 2023 – May 2023',\r\n      technologies:'Java, HTML, CSS, Bootstrap, MySQL',\r\n      link:'https://github.com/bryan-bee/Hospital-Management',\r\n      content:[\r\n        '● Engineered a web application designed to provide hospitals with an intuitive interface for viewing and editing patient and vaccine information.',\r\n        '● The service offered user-friendly patient and vaccine data management for healthcare providers'\r\n      ],\r\n    },\r\n    \r\n  ];\r\n\r\n  return (\r\n    <div className='projects_items'>\r\n\r\n      {projects.map(i => (\r\n        <div className='projects_items_card'>\r\n\r\n          <a href={i.link} target='_blank' rel='noopener noreferrer' className='projects_items_card_link fs2'\r\n            style={{fontWeight: 'bold'}}>{i.name}</a>\r\n          <div className='projects_items_card_description fs1'>{i.description}</div>\r\n          <div className='projects_items_card_technologies fs1'>{i.technologies}</div>\r\n          {i.content.map(j => (\r\n            <ul>\r\n              <li className='projects_items_card_maintext fs1'>{j}</li>\r\n            </ul>\r\n          ))}\r\n\r\n\r\n\r\n        </div>\r\n      ))}\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nfunction Projects() {\r\n  return (\r\n    <div className='projects_main' id='projects'>\r\n\r\n      <div className='projects'>\r\n\r\n        <SectionHeading text='Technical Projects' color='white' />\r\n        <ShowProjects />\r\n\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Projects;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}